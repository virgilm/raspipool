sensor:
  - platform: template
    sensors:
      cycle_pool:
        friendly_name: "Next Cycle pump"
        value_template: >-
          {% if is_state('sensor.pool_temp','unknown') %}
            {% set temp = states('sensor.pool_water_temperature')|float %}
          {%- else -%}
            {% set temp = states('sensor.pool_temp')|float %}
          {%- endif -%}
          {{ ( state_attr('input_datetime.recirculation','timestamp')|float *
            ( 1 - is_state('input_boolean.turbo','on')|int * states('input_number.turbo')|float * 2 / 300 ) *
            ( temp / [1, ( 9 - temp / 2)]|max ) /
            ( states('input_number.quality')|float + 6 ) )|round(0) | timestamp_custom('%H:%M', false) }}
        entity_id:
        - sensor.pool_temp
        - sensor.pool_water_temperature
        - input_number.cycle
        - input_number.quality
        icon_template: >-
          {% if states('input_number.cycle')|int < 0 %}
            mdi:water-off
          {% elif states('input_number.cycle')|int < 240 %}
            mdi:weather-snowy
          {% elif states('input_number.cycle')|int >= 1440 %}
            mdi:numeric-{{ (states('input_number.cycle')|int / 1440)|int }}-box-multiple-outline
          {% else %}
            mdi:weather-sunny
          {% endif %}


input_number:
  out_of_order:
    min: -1
    max: 10
    unit_of_measurement: 'days'
    icon: mdi:engine-off
  cycle:
    min: -10
    max: 14400
    unit_of_measurement: 'minutes'
    mode: box
  second_cycle:
    min: 0
    max: 50
    step: 5
    unit_of_measurement: '%'
    icon: mdi:replay
  pump_on_for:
    min: 0
    max: 10
    step: 0.25
    unit_of_measurement: 'hours'
    icon: mdi:engine

